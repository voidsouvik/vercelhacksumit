{"version":3,"sources":["webpack://OpenloginAdapter/webpack/bootstrap","webpack://OpenloginAdapter/external \"@web3auth/base\"","webpack://OpenloginAdapter/external \"@babel/runtime/helpers/defineProperty\"","webpack://OpenloginAdapter/external \"@toruslabs/openlogin\"","webpack://OpenloginAdapter/external \"lodash.merge\"","webpack://OpenloginAdapter/./src/config.ts","webpack://OpenloginAdapter/./src/openloginAdapter.ts","webpack://OpenloginAdapter/./src/index.ts","webpack://OpenloginAdapter/external \"@web3auth/solana-provider\"","webpack://OpenloginAdapter/external \"@web3auth/ethereum-provider\"","webpack://OpenloginAdapter/external \"@toruslabs/openlogin-ed25519\""],"names":["getOpenloginDefaultOptions","chainNamespace","chainId","adapterSettings","network","OPENLOGIN_NETWORK","MAINNET","clientId","uxMode","UX_MODE","POPUP","chainConfig","getChainConfig","loginSettings","relogin","OpenloginAdapter","BaseAdapter","constructor","params","WALLET_ADAPTERS","OPENLOGIN","ADAPTER_NAMESPACES","MULTICHAIN","ADAPTER_CATEGORY","IN_APP","ADAPTER_STATUS","NOT_READY","CHAIN_NAMESPACES","EIP155","log","debug","defaultOptions","openloginOptions","currentChainNamespace","defaultChainIdConfig","rpcTarget","WalletInitializationError","invalidParams","chainConfigProxy","provider","privKeyProvider","_","Error","init","options","checkInitializationRequirements","isRedirectResult","REDIRECT","redirectResult","getHashQueryParams","Object","keys","length","_pid","replaceUrlOnRedirect","openloginInstance","OpenLogin","status","READY","emit","ADAPTER_EVENTS","privKey","autoConnect","connect","error","checkConnectionRequirements","CONNECTING","adapter","connectWithProvider","ERRORED","message","includes","WalletLoginError","popupClosed","connectionError","disconnect","cleanup","CONNECTED","notConnectedError","notReady","logout","DISCONNECTED","getUserInfo","userInfo","setAdapterSettings","setChainConfig","customChainConfig","SOLANA","SolanaPrivateKeyProvider","config","EthereumPrivateKeyProvider","login","merge","loginProvider","extraLoginOptions","login_hint","finalPrivKey","getED25519Key","sk","toString","setupProvider","reconnected"],"mappings":"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","file":"openloginAdapter.cjs.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + chunkId + \".openloginAdapter.cjs.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonpOpenloginAdapter\"] = window[\"webpackJsonpOpenloginAdapter\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = require(\"@web3auth/base\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@toruslabs/openlogin\");","module.exports = require(\"lodash.merge\");","import { OPENLOGIN_NETWORK, UX_MODE } from \"@toruslabs/openlogin\";\nimport { ChainNamespaceType, getChainConfig } from \"@web3auth/base\";\n\nimport { OpenloginAdapterOptions } from \"./interface\";\n\nexport const getOpenloginDefaultOptions = (chainNamespace?: ChainNamespaceType, chainId?: number | string): OpenloginAdapterOptions => {\n  return {\n    adapterSettings: {\n      network: OPENLOGIN_NETWORK.MAINNET,\n      clientId: \"\",\n      uxMode: UX_MODE.POPUP,\n    },\n    chainConfig: chainNamespace ? getChainConfig(chainNamespace, chainId) : null,\n    loginSettings: {\n      relogin: true,\n    },\n  };\n};\n","import OpenLogin, { getHashQueryParams, LoginParams, OPENLOGIN_NETWORK, OpenLoginOptions, UX_MODE } from \"@toruslabs/openlogin\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapter,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n} from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport merge from \"lodash.merge\";\n\nimport { getOpenloginDefaultOptions } from \"./config\";\nimport type { LoginSettings, OpenloginAdapterOptions } from \"./interface\";\n\nexport type OpenloginLoginParams = LoginParams & {\n  // to maintain backward compatibility\n  login_hint?: string;\n};\n\ntype PrivateKeyProvider = BaseProvider<BaseProviderConfig, BaseProviderState, string>;\n\nexport class OpenloginAdapter extends BaseAdapter<OpenloginLoginParams> {\n  readonly name: string = WALLET_ADAPTERS.OPENLOGIN;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.MULTICHAIN;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.IN_APP;\n\n  public openloginInstance: OpenLogin | null = null;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.EIP155;\n\n  private openloginOptions: OpenLoginOptions;\n\n  private loginSettings: LoginSettings = {};\n\n  private privKeyProvider: PrivateKeyProvider | null = null;\n\n  constructor(params: OpenloginAdapterOptions) {\n    super();\n    log.debug(\"const openlogin adapter\", params);\n    const defaultOptions = getOpenloginDefaultOptions(params.chainConfig?.chainNamespace, params.chainConfig?.chainId);\n    this.openloginOptions = {\n      clientId: \"\",\n      network: OPENLOGIN_NETWORK.MAINNET,\n      ...defaultOptions.adapterSettings,\n      ...(params.adapterSettings || {}),\n    };\n    this.loginSettings = { ...defaultOptions.loginSettings, ...params.loginSettings };\n    // if no chainNamespace is passed then chain config should be set before calling init\n    if (params.chainConfig?.chainNamespace) {\n      this.currentChainNamespace = params.chainConfig?.chainNamespace;\n      const defaultChainIdConfig = defaultOptions.chainConfig ? defaultOptions.chainConfig : {};\n      this.chainConfig = { ...defaultChainIdConfig, ...params?.chainConfig };\n      log.debug(\"const openlogin chainConfig\", this.chainConfig);\n      if (!this.chainConfig.rpcTarget) {\n        throw WalletInitializationError.invalidParams(\"rpcTarget is required in chainConfig\");\n      }\n    }\n  }\n\n  get chainConfigProxy(): CustomChainConfig | null {\n    return this.chainConfig ? { ...this.chainConfig } : null;\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this.privKeyProvider?.provider || null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions): Promise<void> {\n    super.checkInitializationRequirements();\n    if (!this.openloginOptions?.clientId) throw WalletInitializationError.invalidParams(\"clientId is required before openlogin's initialization\");\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"chainConfig is required before initialization\");\n    let isRedirectResult = false;\n\n    if (this.openloginOptions.uxMode === UX_MODE.REDIRECT) {\n      const redirectResult = getHashQueryParams();\n      if (Object.keys(redirectResult).length > 0 && redirectResult._pid) {\n        isRedirectResult = true;\n      }\n    }\n    this.openloginOptions = {\n      ...this.openloginOptions,\n      replaceUrlOnRedirect: isRedirectResult,\n    };\n    this.openloginInstance = new OpenLogin(this.openloginOptions);\n\n    await this.openloginInstance.init();\n\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.OPENLOGIN);\n\n    try {\n      // connect only if it is redirect result or if connect (adapter is cached/already connected in same session) is true\n      if (this.openloginInstance.privKey && (options.autoConnect || isRedirectResult)) {\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached openlogin provider\", error);\n      this.emit(\"ERRORED\", error);\n    }\n  }\n\n  async connect(params?: OpenloginLoginParams): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { ...params, adapter: WALLET_ADAPTERS.OPENLOGIN });\n    try {\n      await this.connectWithProvider(params);\n      return this.provider;\n    } catch (error: unknown) {\n      log.error(\"Failed to connect with openlogin provider\", error);\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      if ((error as Error)?.message.includes(\"user closed popup\")) {\n        throw WalletLoginError.popupClosed();\n      }\n      throw WalletLoginError.connectionError(\"Failed to login with openlogin\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.openloginInstance) throw WalletInitializationError.notReady(\"openloginInstance is not ready\");\n    await this.openloginInstance.logout();\n    if (options.cleanup) {\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.openloginInstance = null;\n      this.privKeyProvider = null;\n    } else {\n      // ready to be connected again\n      this.status = ADAPTER_STATUS.READY;\n    }\n\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.openloginInstance) throw WalletInitializationError.notReady(\"openloginInstance is not ready\");\n    const userInfo = await this.openloginInstance.getUserInfo();\n    return userInfo;\n  }\n\n  // should be called only before initialization.\n  setAdapterSettings(adapterSettings: OpenLoginOptions): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    const defaultOptions = getOpenloginDefaultOptions();\n    this.openloginOptions = { ...defaultOptions.adapterSettings, ...(this.openloginOptions || {}), ...adapterSettings };\n  }\n\n  // should be called only before initialization.\n  setChainConfig(customChainConfig: CustomChainConfig): void {\n    super.setChainConfig(customChainConfig);\n    this.currentChainNamespace = customChainConfig.chainNamespace;\n  }\n\n  private async connectWithProvider(params?: OpenloginLoginParams): Promise<void> {\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"chainConfig is required before initialization\");\n    if (!this.openloginInstance) throw WalletInitializationError.notReady(\"openloginInstance is not ready\");\n\n    if (this.currentChainNamespace === CHAIN_NAMESPACES.SOLANA) {\n      const { SolanaPrivateKeyProvider } = await import(\"@web3auth/solana-provider\");\n      this.privKeyProvider = new SolanaPrivateKeyProvider({ config: { chainConfig: this.chainConfig } });\n    } else if (this.currentChainNamespace === CHAIN_NAMESPACES.EIP155) {\n      const { EthereumPrivateKeyProvider } = await import(\"@web3auth/ethereum-provider\");\n      this.privKeyProvider = new EthereumPrivateKeyProvider({ config: { chainConfig: this.chainConfig } });\n    } else {\n      throw new Error(`Invalid chainNamespace: ${this.currentChainNamespace} found while connecting to wallet`);\n    }\n    // if not logged in then login\n    if (!this.openloginInstance.privKey && params) {\n      await this.openloginInstance.login(\n        merge(\n          this.loginSettings,\n          { loginProvider: params.loginProvider },\n          { extraLoginOptions: { ...(params.extraLoginOptions || {}), login_hint: params.login_hint || params.extraLoginOptions?.login_hint } }\n        )\n      );\n    }\n    let finalPrivKey = this.openloginInstance.privKey;\n    if (finalPrivKey) {\n      if (this.currentChainNamespace === CHAIN_NAMESPACES.SOLANA) {\n        const { getED25519Key } = await import(\"@toruslabs/openlogin-ed25519\");\n        finalPrivKey = getED25519Key(finalPrivKey).sk.toString(\"hex\");\n      }\n      await this.privKeyProvider.setupProvider(finalPrivKey);\n      this.status = ADAPTER_STATUS.CONNECTED;\n      this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.OPENLOGIN, reconnected: !params } as CONNECTED_EVENT_DATA);\n    }\n  }\n}\n","export * from \"./config\";\nexport * from \"./interface\";\nexport * from \"./openloginAdapter\";\n","module.exports = require(\"@web3auth/solana-provider\");","module.exports = require(\"@web3auth/ethereum-provider\");","module.exports = require(\"@toruslabs/openlogin-ed25519\");"],"sourceRoot":""}